From 0f049dc60edec1f2a9aa8becb83079fce4678d52 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?B=C3=B6sz=C3=B6rm=C3=A9nyi=20Zolt=C3=A1n?=
 <zboszor@gmail.com>
Date: Wed, 27 Sep 2017 15:40:57 +0200
Subject: [PATCH] Speed up file_hash_set_file_owner()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

file_hash_set_file_owner() uses this sequence:

pkg_get_installed_files(old_owning_pkg);
file_list_remove_elt(old_owning_pkg->installed_files, file_name);
pkg_free_installed_files(old_owning_pkg);

pkg_get_installed_files() and pkg_free_installed_files() use
reference count for the file list but at least when calling
file_hash_set_file_owner() from check_data_file_clashes(), the
pkg->installed_files pointer is NULL so when a package is upgraded,
the behaviour of this functions is to always open, read and close
the packagename.list file and this is a very heavy operation.

For an IPK package with 12,000+ files, upgrading the package takes
over 5 minutes while with this change it goes down to 6 seconds
on a fast machine.

I tested it with Valgrind but it doesn't seem to cause any leaks.

Signed-off-by: Zoltán Böszörményi <zboszor@gmail.com>
Signed-off-by: Alejandro del Castillo <alejandro.delcastillo@ni.com>

diff --git a/libopkg/pkg_hash.c b/libopkg/pkg_hash.c
index 5215774..068035c 100644
--- a/libopkg/pkg_hash.c
+++ b/libopkg/pkg_hash.c
@@ -872,9 +872,9 @@ void file_hash_set_file_owner(const char *file_name, pkg_t * owning_pkg)
     hash_table_insert(&opkg_config->file_hash, file_name, owning_pkg);
 
     if (old_owning_pkg) {
-        pkg_get_installed_files(old_owning_pkg);
+        if (!old_owning_pkg->installed_files)
+            pkg_get_installed_files(old_owning_pkg);
         str_list_remove_elt(old_owning_pkg->installed_files, file_name);
-        pkg_free_installed_files(old_owning_pkg);
 
         /* mark this package to have its filelist written */
         old_owning_pkg->state_flag |= SF_FILELIST_CHANGED;
-- 
2.1.4

